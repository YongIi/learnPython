# 开发人员：leo
# 开发时间：2022/10/12 17:24

# 面向对象的三大特征：封装、继承、多态

"""
面向对象的三大特征与语言本身是没有关系的，其他语言也有，只是一种编程思想

封装：提高程序的安全性
1、将数据（属性）和行为（方法、函数）包装到类对象中。在方法（函数）内部对属性进行操作，在类对象的外部调用方法。
这样，无需关心方法（函数）内部的具体实现细节，从而隔离了复杂度
2、在Python中没有专门的修饰符用于属性的私有，如果该属性不希望在类对象外部被访问，前边使用两个__下划线，例如构造函数__init__

继承：提高代码的复用性

多态：提高程序的可扩展性和可维护性

"""


# 将数据与方法（函数）封装在类对象中
class Car:
    def __init__(self, brand):
        self.brand = brand  # brand是类对象Car的一个实例属性
    def start(self):
        print("汽车启动...")

# 创建对象
car = Car("宝马X5")

# 在类对象的外部调用
car.start()
print(car.brand)