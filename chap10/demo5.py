# 开发人员：leo
# 开发时间：2022/10/3 16:16

# 函数的参数

"""
1、个数可变的位置参数
定义函数时，可能无法事先确定传递的位置实参的个数时，使用个数可变的位置参数
使用*定义个数可变的位置形参
参数传递的结果为一个元组

2、个数可变的关键字参数
定义函数时，可能无法事先确定传递的关键字实参的个数时，使用个数可变的关键字形参
使用**定义个数可变的关键字形参
参数传递的结果是一个字典

"""


def fun(*args):  # 位置传参，参数按顺序传递，可以传递任意个数的参数，参数传递结果是元组，即使只传一个参数也是元组。 函数定义时，可能无法事先确定传递的位置实参的个数时，使用可变的位置参数
    print(args)
    print(args[0])


fun(10)  # (10,)
fun(10, 30)
fun(30, 405, 50)


def fun1(**args):  # 通过关键字传参，可以传递任意个数的关键字参数，参数传递结果是字典
    print(args)


fun1(a=10)
fun1(a=20, b=30, c=40)  # {'a': 20, 'b': 30, 'c': 40}

'''
以下代码程序会报错
def fun2(*args, *a):  # 个数可变的位置参数只能有一个
    pass

def fun3(**args, **a):  # 个数可变的关键字参数也只能有一个
    pass
'''


def fun4(*args1, **args2):
    pass


'''
以下代码会报错
def fun5(**args1, *args2):
    pass
    
在函数的定义过程中，既有个数可变的位置参数，也有个数可变的关键字形参，要求个数可变的位置形参放在个数可变的关键字形参之前
'''


def fun4(*args1, **args2):
    print(args1)
    print(args2)


fun4(20, 30, 40, a=1, b=2)
# fun4(a=1, b=2, 20, 30, 40)
